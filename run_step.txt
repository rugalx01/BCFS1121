## Day2 
## 安裝 solidity 的時候要注意是選擇 Juan Blanco 作者的版本

## 使用 solidity 0.5.16 但是編譯器會出現紅字，此時在紅線上使用滑鼠右鍵，選擇 change globol compiler version(remote) 切換到0.5.17的版本就會變正常了(預設安裝的版本會是比較高的版本，exapmle是 v8.x)

## 使用 truffle 建立 migrations ，用power shell 去執行 truffle create migration SecretNumber但是會出錯，所以要先變更 power shell的設定，使用管理者打開power shell 然後輸入 Set-ExecutionPolicy -ExecutionPolicy Unrestricted 在選擇A ，完成之後在重新下一次 truffle create migration 就會在 migrations 目錄之下看到檔案。

## 再去變更 migration 檔案的內容

## 變更檔案名稱為 1_secret_number.js

## 重新啟動 truffle [truffle --develop]

## 刷新內容 deploy --reset  (一開始這邊會出現錯誤，因為編譯的版本不依樣，所以要去 truffle-config.js 找到 compilers->solc->version 把內容改成對應的版本號 version: "0.5.17") 再重新去執行 deploy --reset 就會完成了

## 建立非同步交易 demo03.js 主要是要把 truffle 建立出來的 [合約].json 讀取近來使用，還有取得自建服務器的 id 跟 network-address

## 1個Ether 是10的18次方 1000000000000000000 [1 +* 18個0]

## 關於payable流程 (有關 Ether 的數值變動功能)

## 建立一個新的 Contracts  名稱是 SecretNumber.sol ,編輯內容

## 新建一個 migrations 在 truffle develop 執行 truffle create migration EtherTransfer 去建立出來

## 更改名稱為 2_ether_transfer.js，並編輯器內容

## 回到truffle develop去執行  migrate --reset 重新編譯出來新的 migrations 並且讓系統加載進去 會看到 > Total deployments:   2 (從原本的1變成2 多了一個)

## 準備範例8的製作

=================================================================
## Day 3

## call()只做讀取不修改、send()才會有修改。兩者都會有Event的狀態可以做確認。
## 伺服器啟動流程 1.先啟動server [truffle develop] 2.重新編譯 [deploy --reset] 3.測試連線 [node 某一個測試這邊是用demo08]

## 查詢帳戶餘額  web3.eth.getBalance(accounts[0])
## 查詢地址餘額  web3.eth.getBalance("YOUR_ADDRESS_FOR_THAT_CONTRACT")，地址可以用  const addresses = await web3.eth.getAccounts(); 取得
## 每次金額異動都會有gas(手續費的產生，會先扣除手續費在做金額轉帳，都會從 from 那一方做扣除，如果gas不足就無法交易 )
## 交易的金額部分可以使用工具去做產出，避免手動輸入上面的錯誤發生。
## demo09_1 帳戶對帳戶之間的轉換，就不需要另外取得合約(address)。單純就是兩個帳戶的帳號就可以做轉帳

## 合約事件 EventGenerate.sol
## 建立 migration [truffle create migration EventGenerate]
## 編輯 產生出來的 EventGenerate.js ，編輯內容請看 .\migrations\3_EventGenerate.js
## 重新編譯 truffle 的 migrations [migrate --reset]
## demo13, demo14 事件處理可以使用 notifyEvent (只能用在 websocket的模式下)，或是可以回去參考demo06的方式也是有監聽的效果
## demo14 最後是改成 監聽之後再送出事件也是可以正常動作的

## 錢包教學 
## 下載metamask 到 chrome當中 (他是網頁擴充套件)
## 密碼跟助記辭都要記下 (助記辭比較重要)

## 錢包 測試網絡 
## 1. https://faucet.sepolia.dev/ 註冊、貼上自己 metamask 的位置(在錢包主頁面帳號的下面) 申請 (這個比較慢一點)
## 2. https://goerlifaucet.com/   註冊、貼上自己 metamask 的位置(在錢包主頁面帳號的下面) 申請 (這個30秒左右就會有了)
## 3. https://sepoliafaucet.net/  要使用推特分享才能要到 (這個跟第1個是一樣的不過用推特貼文比較快)
## 上述都可以去要到錢(測試用的)
## https://app.infura.io/ 註冊這個網站之後要連動到錢包要使用到的
## 安裝錢包操作套件 npm install @truffle/hdwallet-provider
## 在metamaks當中找出自己的公私鑰  公鑰在主要帳號下面的地址 私鑰 在帳戶詳情(在帳號右邊的三點區)當中 (可以去看Day3的截圖)
## 建立 demo15.js 準備使用錢包 (請看code)
## 交易紀錄查詢 Etherscan [主要公開網路] (如果是測試網路請查詢的時候後面加上自己使用的幣別 goerli 就查 Etherscan goerli, sepolia 就使用 Etherscan sepolia)
## 查詢的時候貼上自己的帳戶 address 就可以做查詢
## demo16 從交易合約上面反查詢